// Anotações legais //

/* tipos de dados */
    // Não sei se tá certo o uso de array e objetos mas é isso aí
    // conserto depois 
    let Data_types = [
        number: {
            infinity,
            NaN
        },
        string,
        boolean,
        null,
        undefined,
        object: {
            array
        },
        function
    ]

/* conversão de dados */

    parseInt(n) // para converter em um número inteiro
    parseFloat(n) // para converter em um número real (ponto ou vírgula)

    // ou

    number(n) // para deixar que o javascript se vire em saber qual é

    // ou para transformar o dado em uma string

    n.toString() // jeito 1
    String(n) // jeito 2

/* Formatação de números */

    var n1 = 1543.5
    n1.toFixed(2) // retorna 1543.50

    // para trocar o . por ,
    n1.toFixed(2).replace('.', ',') // retorna 1543,50

    // comando que provavelmente eu não vou usar mas é muito importante
    n1.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }) // retorna R$ 1.543,50


/* Precedência */
    |   ()
    |   ** // Potenciação
    |   * / % 
    |   + -
    |   > < >= <= == === != !==
    |   !
    |   &&
    |   ||
    \/

/* Auto atribuições */
    var n = 3
    n = n + 4       ou      n += 4
    n = n - 5       ou      n -= 5
    n = n * 4       ou      n *= 4
    n = n / 2       ou      n /= 2
    n = n ** 2      ou      n **= 2
    n = n % 5       ou      n %= 5

/* Incremento */
    var x = 5
    x = x + 1       ou      x++
    x = x - 1       ou      x--

/* Relacionais */
    >       // maior
    <       // menor
    >=      // maior ou igual
    <=      // menor ou igual
    ==      // igual (testa o valor)
    ===     // estritamente igual (testa o valor e o tipo)
    !=      // diferente (testa o valor)
    !==     // estritamente diferente (testa o valor e o tipo)

/* Lógicos */
    !       // Negação   (não)
    &&      // conjunção (e)
    ||      // disjunção (ou)

/* Ternário */
    teste ? true : false 

    
/* DOM */
    Document
    Object 
    Model

    var p1 = window.document.getElementsByTagName('p')[0] // o 0 serve para selecionar o primeiro elemento que aparecer, tipo :first-child no css

    /* árvore DOM */
        // achei mais fácil fazer (e entender) como se fossem diretórios :|
        // exemplo de DOM
        /window
            /location
            /history
            /Document
                /html
                    /head
                        /meta
                        /title
                    /body
                        /h1
                        /p
                            /strong
                        /p
                        /div

/* Eventos DOM */
    // Eventos de Mouse
        mouseenter // quando o cursor entrar no objeto
        mousemove  // quando o cursor se mover dentro do objeto
        mousedown  // quando o cursor clicar e segurar o objeto
        mouseup    // quando o cursor soltar o clique longo
        click      // quando o mouse clicar curtamente
        mouseout   // quando o cursor sair do objeto
